# --------------------------------------------------------------------------------
# Replica Count
# --------------------------------------------------------------------------------
replicaCount: 1

# --------------------------------------------------------------------------------
# Weaviate Docker Image
# --------------------------------------------------------------------------------
image:
  repository: cr.weaviate.io/semitechnologies/weaviate
  tag: "1.25.6"        # <-- Pin to a known Weaviate version
  pullPolicy: IfNotPresent

# --------------------------------------------------------------------------------
# Persistence
# --------------------------------------------------------------------------------
persistence:
  enabled: true
  size: 50Gi
  storageClass: gp3    # If using the custom gp3 SC above. Or "gp2", or "" for default.

# --------------------------------------------------------------------------------
# Environment Variables (mainly for Weaviate config)
# --------------------------------------------------------------------------------
env:
  QUERY_DEFAULTS_LIMIT: "25"
  AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: "false"
  PERSISTENCE_DATA_PATH: "/var/lib/weaviate"

  # Example for S3 backups:
  BACKUP_S3_BUCKET: "my-weaviate-backups"
  BACKUP_S3_ENDPOINT: "s3.amazonaws.com"
  BACKUP_S3_REGION: "us-east-1"

  # If you want a single node with raft disabled, you could do:
  RAFT_ENABLED: "false"
  # For multi-node, set RAFT_ENABLED true and RAFT_BOOTSTRAP_EXPECT=3 (for 3 replicas, etc.)

# --------------------------------------------------------------------------------
# Liveness & Readiness Probes
# --------------------------------------------------------------------------------
livenessProbe:
  enabled: true
  initialDelaySeconds: 900   # Weaviate can take time to init
readinessProbe:
  enabled: true

# --------------------------------------------------------------------------------
# Weaviate Service
# --------------------------------------------------------------------------------
service:
  type: ClusterIP
  port: 8080
  annotations: {}

# --------------------------------------------------------------------------------
# gRPC Service (optional if you want outside access)
# --------------------------------------------------------------------------------
grpcService:
  enabled: false
  type: LoadBalancer
  ports:
    - name: grpc
      protocol: TCP
      port: 50051

# --------------------------------------------------------------------------------
# Local Modules (example)
# --------------------------------------------------------------------------------
# text2vecTransformers:
#   enabled: true
# qnaTransformers:
#   enabled: true
# ...

# --------------------------------------------------------------------------------
# Authentication / Authorization Examples
# --------------------------------------------------------------------------------
authentication:
  apikey:
    enabled: true
    allowed_keys:
      - readonly-key
      - secr3tk3y
    users:
      - readonly@example.com
      - admin@example.com
  anonymous_access:
    enabled: false
  oidc:
    enabled: false
    issuer: "https://auth.example.com"
    username_claim: email
    groups_claim: groups
    client_id: my-oidc-app

authorization:
  admin_list:
    enabled: true
    users:
      - admin@example.com
    readonly_users:
      - readonly@example.com

# --------------------------------------------------------------------------------
# Security Context (to run as non-root, if desired)
# --------------------------------------------------------------------------------
containerSecurityContext:
  enabled: false
  # runAsUser: 1000
  # runAsGroup: 1000
